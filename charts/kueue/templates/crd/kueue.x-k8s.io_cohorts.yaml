---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
  {{- include "kueue.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.enableCertManager }}
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "kueue.fullname" . }}-serving-cert
    {{- end }}
    controller-gen.kubebuilder.io/version: v0.16.3
  name: cohorts.kueue.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: {{ include "kueue.fullname" . }}-webhook-service
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: kueue.x-k8s.io
  names:
    kind: Cohort
    listKind: CohortList
    plural: cohorts
    singular: cohort
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          Cohort is the Schema for the cohorts API. Using Hierarchical
          Cohorts (any Cohort which has a parent) with Fair Sharing
          results in undefined behavior in 0.9
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CohortSpec defines the desired state of Cohort
            properties:
              parent:
                description: |-
                  Parent references the name of the Cohort's parent, if
                  any. It satisfies one of three cases:
                  1) Unset. This Cohort is the root of its Cohort tree.
                  2) References a non-existent Cohort. We use default Cohort (no borrowing/lending limits).
                  3) References an existent Cohort.

                  If a cycle is created, we disable all members of the
                  Cohort, including ClusterQueues, until the cycle is
                  removed.  We prevent further admission while the cycle
                  exists.
                maxLength: 253
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                type: string
              resourceGroups:
                description: |-
                  ResourceGroups describes groupings of Resources and
                  Flavors.  Each ResourceGroup defines a list of Resources
                  and a list of Flavors which provide quotas for these
                  Resources. Each Resource and each Flavor may only form part
                  of one ResourceGroup.  There may be up to 16 ResourceGroups
                  within a Cohort.

                  BorrowingLimit limits how much members of this Cohort
                  subtree can borrow from the parent subtree.

                  LendingLimit limits how much members of this Cohort subtree
                  can lend to the parent subtree.

                  Borrowing and Lending limits must only be set when the
                  Cohort has a parent.  Otherwise, the Cohort create/update
                  will be rejected by the webhook.
                items:
                  properties:
                    coveredResources:
                      description: |-
                        coveredResources is the list of resources covered by the flavors in this
                        group.
                        Examples: cpu, memory, vendor.com/gpu.
                        The list cannot be empty and it can contain up to 16 resources.
                      items:
                        description: ResourceName is the name identifying various
                          resources in a ResourceList.
                        type: string
                      maxItems: 16
                      minItems: 1
                      type: array
                    flavors:
                      description: |-
                        flavors is the list of flavors that provide the resources of this group.
                        Typically, different flavors represent different hardware models
                        (e.g., gpu models, cpu architectures) or pricing models (on-demand vs spot
                        cpus).
                        Each flavor MUST list all the resources listed for this group in the same
                        order as the .resources field.
                        The list cannot be empty and it can contain up to 16 flavors.
                      items:
                        properties:
                          name:
                            description: |-
                              name of this flavor. The name should match the .metadata.name of a
                              ResourceFlavor. If a matching ResourceFlavor does not exist, the
                              ClusterQueue will have an Active condition set to False.
                            maxLength: 253
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          resources:
                            description: |-
                              resources is the list of quotas for this flavor per resource.
                              There could be up to 16 resources.
                            items:
                              properties:
                                borrowingLimit:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    borrowingLimit is the maximum amount of quota for the [flavor, resource]
                                    combination that this ClusterQueue is allowed to borrow from the unused
                                    quota of other ClusterQueues in the same cohort.
                                    In total, at a given time, Workloads in a ClusterQueue can consume a
                                    quantity of quota equal to nominalQuota+borrowingLimit, assuming the other
                                    ClusterQueues in the cohort have enough unused quota.
                                    If null, it means that there is no borrowing limit.
                                    If not null, it must be non-negative.
                                    borrowingLimit must be null if spec.cohort is empty.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                lendingLimit:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    lendingLimit is the maximum amount of unused quota for the [flavor, resource]
                                    combination that this ClusterQueue can lend to other ClusterQueues in the same cohort.
                                    In total, at a given time, ClusterQueue reserves for its exclusive use
                                    a quantity of quota equals to nominalQuota - lendingLimit.
                                    If null, it means that there is no lending limit, meaning that
                                    all the nominalQuota can be borrowed by other clusterQueues in the cohort.
                                    If not null, it must be non-negative.
                                    lendingLimit must be null if spec.cohort is empty.
                                    This field is in beta stage and is enabled by default.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                name:
                                  description: name of this resource.
                                  type: string
                                nominalQuota:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    nominalQuota is the quantity of this resource that is available for
                                    Workloads admitted by this ClusterQueue at a point in time.
                                    The nominalQuota must be non-negative.
                                    nominalQuota should represent the resources in the cluster available for
                                    running jobs (after discounting resources consumed by system components
                                    and pods not managed by kueue). In an autoscaled cluster, nominalQuota
                                    should account for resources that can be provided by a component such as
                                    Kubernetes cluster-autoscaler.

                                    If the ClusterQueue belongs to a cohort, the sum of the quotas for each
                                    (flavor, resource) combination defines the maximum quantity that can be
                                    allocated by a ClusterQueue in the cohort.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              required:
                              - name
                              - nominalQuota
                              type: object
                            maxItems: 16
                            minItems: 1
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        required:
                        - name
                        - resources
                        type: object
                      maxItems: 16
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                  required:
                  - coveredResources
                  - flavors
                  type: object
                  x-kubernetes-validations:
                  - message: flavors must have the same number of resources as the
                      coveredResources
                    rule: self.flavors.all(x, size(x.resources) == size(self.coveredResources))
                maxItems: 16
                type: array
                x-kubernetes-list-type: atomic
            type: object
          status:
            description: CohortStatus defines the observed state of Cohort
            properties:
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
