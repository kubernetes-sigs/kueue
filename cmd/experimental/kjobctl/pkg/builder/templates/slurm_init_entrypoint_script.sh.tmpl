#!/usr/local/bin/bash

set -o errexit
set -o nounset
set -o pipefail
set -x

# External variables
# JOB_COMPLETION_INDEX  - completion index of the job.

for i in {0..{{.SlurmNTasksPerNode}}}
do
  # ["COMPLETION_INDEX"]="CONTAINER_INDEX_1,CONTAINER_INDEX_2"
	declare -A array_indexes=({{.ArrayIndexes}}) 	# Requires bash v4+

	container_indexes=${array_indexes[${JOB_COMPLETION_INDEX}]}
	container_indexes=(${container_indexes//,/ })

	if [[ ! -v container_indexes[$i] ]];
	then
		break
	fi

	mkdir -p {{.EnvsPath}}/$i

	cat << EOF > {{.EnvsPath}}/$i/{{.SbatchEnvFilename}}
SBATCH_ARRAY_INX={{.SbatchArrayIndex}}
SBATCH_GPUS_PER_TASK={{.SbatchGPUsPerTask}}
SBATCH_MEM_PER_CPU={{.SbatchMemPerCPU}}
SBATCH_MEM_PER_GPU={{.SbatchMemPerGPU}}
SBATCH_OUTPUT={{.SbatchOutput}}
SBATCH_ERROR={{.SbatchError}}
SBATCH_INPUT={{.SbatchInput}}
SBATCH_JOB_NAME={{.SbatchJobName}}
SBATCH_PARTITION={{.SbatchPartition}}
EOF

	cat << EOF > {{.EnvsPath}}/$i/{{.SlurmEnvFilename}}
SLURM_ARRAY_JOB_ID={{.SlurmArrayJobID}}
SLURM_ARRAY_TASK_COUNT={{.SlurmArrayTaskCount}}
SLURM_ARRAY_TASK_MAX={{.SlurmArrayTaskMax}}
SLURM_ARRAY_TASK_MIN={{.SlurmArrayTaskMin}}
SLURM_TASKS_PER_NODE={{.SlurmTasksPerNode}}
SLURM_CPUS_PER_TASK={{.SlurmCPUsPerTask}}
SLURM_CPUS_ON_NODE={{.SlurmCPUsOnNode}}
SLURM_JOB_CPUS_PER_NODE={{.SlurmJobCPUsPerNode}}
SLURM_CPUS_PER_GPU={{.SlurmCPUsPerGPU}}
SLURM_MEM_PER_CPU={{.SlurmMemPerCPU}}
SLURM_MEM_PER_GPU={{.SlurmMemPerGPU}}
SLURM_MEM_PER_NODE={{.SlurmMemPerNode}}
SLURM_GPUS={{.SlurmGPUs}}
SLURM_NTASKS={{.SlurmNTasks}}
SLURM_NTASKS_PER_NODE={{.SlurmNTasksPerNode}}
SLURM_NPROCS={{.SlurmNProcs}}
SLURM_NNODES={{.SlurmNNodes}}
SLURM_SUBMIT_DIR={{.SlurmSubmitDir}}
SLURM_SUBMIT_HOST=$HOSTNAME
SLURM_JOB_ID=$(( JOB_COMPLETION_INDEX * {{.SlurmNTasksPerNode}} + i + {{.SlurmArrayJobID}} ))
SLURM_JOBID=$(( JOB_COMPLETION_INDEX * {{.SlurmNTasksPerNode}} + i + {{.SlurmArrayJobID}} ))
SLURM_ARRAY_TASK_ID=${container_indexes[$i]}
EOF

done
