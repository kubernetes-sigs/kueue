---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: applicationprofiles.kjobctl.x-k8s.io
spec:
  group: kjobctl.x-k8s.io
  names:
    kind: ApplicationProfile
    listKind: ApplicationProfileList
    plural: applicationprofiles
    singular: applicationprofile
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ApplicationProfile is the Schema for the applicationprofiles
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationProfileSpec defines the desired state of ApplicationProfile
            properties:
              supportedModes:
                items:
                  description: 'TODO: Fix validations...'
                  properties:
                    name:
                      description: |-
                        name determines which template will be used and which object will eventually be created.
                        Possible values are Interactive, Job, RayJob, RayCluster and Slurm.
                      enum:
                      - Interactive
                      - Job
                      - RayJob
                      - RayCluster
                      - Slurm
                      type: string
                    requiredFlags:
                      description: |-
                        requiredFlags point which cli flags are required to be passed in order to fill the gaps in the templates.
                        Possible values are cmd, parallelism, completions, replicas, min-replicas, max-replicas, request, localqueue, and raycluster.
                        replicas, min-replicas, and max-replicas flags used only for RayJob and RayCluster mode.
                        The raycluster flag used only for the RayJob mode.
                        The request flag used only for Interactive and Job modes.
                        The cmd flag used only for Interactive, Job, and RayJob.
                        If the raycluster flag are set, none of localqueue, replicas, min-replicas, or max-replicas can be set.
                        For the Slurm mode, the possible values are: array, cpus-per-task, stderr, gpus-per-task, input, job-name, mem-per-cpu,
                        mem-per-gpu, mem-per-task, nodes, ntasks, stdout, partition.


                        cmd and requests values are going to be added only to the first primary container.
                      items:
                        enum:
                        - cmd
                        - parallelism
                        - completions
                        - replicas
                        - min-replicas
                        - max-replicas
                        - request
                        - localqueue
                        - raycluster
                        - array
                        - cpus-per-task
                        - stderr
                        - gpus-per-task
                        - input
                        - job-name
                        - mem-per-cpu
                        - mem-per-gpu
                        - mem-per-task
                        - nodes
                        - ntasks
                        - stdout
                        - partition
                        type: string
                      maxItems: 8
                      type: array
                      x-kubernetes-list-type: set
                    template:
                      description: |-
                        template is the name of the template.
                        Template type depends on ApplicationProfileMode:
                          - on Interactive mode it must be v1/PodTemplate
                          - on Job mode it must be kjobctl.x-k8s.io/v1alpha1/JobTemplate
                          - on RayJob mode it must be kjobctl.x-k8s.io/v1alpha1/RayJobTemplate
                          - on RayCluster mode it must be kjobctl.x-k8s.io/v1alpha1/RayClusterTemplate
                          - on Slurm mode it must be kjobctl.x-k8s.io/v1alpha1/JobTemplate
                      maxLength: 253
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  - template
                  type: object
                  x-kubernetes-validations:
                  - message: replicas flag can be used only on RayJob and RayCluster
                      modes
                    rule: '!has(self.requiredFlags) || self.name == ''RayJob'' ||
                      self.name == ''RayCluster'' || (self.name == ''Interactive''
                      || self.name == ''Job'' || self.name == ''Slurm'') && !(''replicas''
                      in self.requiredFlags)'
                  - message: min-replicas flag can be used only on RayJob and RayCluster
                      modes
                    rule: '!has(self.requiredFlags) || self.name == ''RayJob'' ||
                      self.name == ''RayCluster'' || (self.name == ''Interactive''
                      || self.name == ''Job'' || self.name == ''Slurm'') && !(''min-replicas''
                      in self.requiredFlags)'
                  - message: max-replicas flag can be used only on RayJob and RayCluster
                      modes
                    rule: '!has(self.requiredFlags) || self.name == ''RayJob'' ||
                      self.name == ''RayCluster'' || (self.name == ''Interactive''
                      || self.name == ''Job'' || self.name == ''Slurm'') && !(''max-replicas''
                      in self.requiredFlags)'
                  - message: request flag can be used only on Job and Interactive
                      modes
                    rule: '!has(self.requiredFlags) || self.name == ''Interactive''
                      || self.name == ''Job'' || (self.name == ''RayJob'' || self.name
                      == ''RayCluster'' || self.name == ''Slurm'') && !(''request''
                      in self.requiredFlags)'
                  - message: cmd flag can be used only on Job, Interactive and RayJob
                      modes
                    rule: '!has(self.requiredFlags) || self.name == ''Interactive''
                      || self.name == ''Job'' || self.name == ''RayJob'' || (self.name
                      == ''RayCluster'' || self.name == ''Slurm'') && !(''cmd'' in
                      self.requiredFlags) '
                  - message: raycluster flag can be used only on RayJob mode
                    rule: '!has(self.requiredFlags) || self.name == ''RayJob'' ||
                      (self.name == ''Interactive'' || self.name == ''Job'' || self.name
                      == ''RayCluster'' || self.name == ''Slurm'') && !(''raycluster''
                      in self.requiredFlags)'
                  - message: if raycluster flag are set none of localqueue, replicas,
                      min-replicas and max-replicas can be
                    rule: '!has(self.requiredFlags) || !(''raycluster'' in self.requiredFlags)
                      || (!(''localqueue'' in self.requiredFlags) && !(''replicas''
                      in self.requiredFlags)  && !(''min-replicas'' in self.requiredFlags)  &&
                      !(''max-replicas'' in self.requiredFlags) )'
                  - message: array flag can be used only on Slurm mode
                    rule: '!has(self.requiredFlags) || self.name == ''Slurm'' || self.name
                      != ''Slurm'' && !(''array'' in self.requiredFlags)'
                  - message: cpus-per-task flag can be used only on Slurm mode
                    rule: '!has(self.requiredFlags) || self.name == ''Slurm'' || self.name
                      != ''Slurm'' && !(''cpus-per-task'' in self.requiredFlags)'
                  - message: stderr flag can be used only on Slurm mode
                    rule: '!has(self.requiredFlags) || self.name == ''Slurm'' || self.name
                      != ''Slurm'' && !(''stderr'' in self.requiredFlags)'
                  - message: gpus-per-task flag can be used only on Slurm mode
                    rule: '!has(self.requiredFlags) || self.name == ''Slurm'' || self.name
                      != ''Slurm'' && !(''gpus-per-task'' in self.requiredFlags)'
                  - message: input flag can be used only on Slurm mode
                    rule: '!has(self.requiredFlags) || self.name == ''Slurm'' || self.name
                      != ''Slurm'' && !(''input'' in self.requiredFlags)'
                  - message: job-name flag can be used only on Slurm mode
                    rule: '!has(self.requiredFlags) || self.name == ''Slurm'' || self.name
                      != ''Slurm'' && !(''job-name'' in self.requiredFlags)'
                  - message: mem-per-cpu flag can be used only on Slurm mode
                    rule: '!has(self.requiredFlags) || self.name == ''Slurm'' || self.name
                      != ''Slurm'' && !(''mem-per-cpu'' in self.requiredFlags)'
                  - message: mem-per-gpu flag can be used only on Slurm mode
                    rule: '!has(self.requiredFlags) || self.name == ''Slurm'' || self.name
                      != ''Slurm'' && !(''mem-per-gpu'' in self.requiredFlags)'
                  - message: mem-per-task flag can be used only on Slurm mode
                    rule: '!has(self.requiredFlags) || self.name == ''Slurm'' || self.name
                      != ''Slurm'' && !(''mem-per-task'' in self.requiredFlags)'
                  - message: nodes flag can be used only on Slurm mode
                    rule: '!has(self.requiredFlags) || self.name == ''Slurm'' || self.name
                      != ''Slurm'' && !(''nodes'' in self.requiredFlags)'
                  - message: ntasks flag can be used only on Slurm mode
                    rule: '!has(self.requiredFlags) || self.name == ''Slurm'' || self.name
                      != ''Slurm'' && !(''ntasks'' in self.requiredFlags)'
                  - message: stdout flag can be used only on Slurm mode
                    rule: '!has(self.requiredFlags) || self.name == ''Slurm'' || self.name
                      != ''Slurm'' && !(''stdout'' in self.requiredFlags)'
                  - message: partition flag can be used only on Slurm mode
                    rule: '!has(self.requiredFlags) || self.name == ''Slurm'' || self.name
                      != ''Slurm'' && !(''partition'' in self.requiredFlags)'
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              volumeBundles:
                items:
                  description: VolumeBundleReference is the name of the VolumeBundle.
                  maxLength: 253
                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                type: array
                x-kubernetes-list-type: set
            required:
            - supportedModes
            type: object
        type: object
    served: true
    storage: true
