/*
Copyright 2023 The Kubernetes Authors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

import (
	jobsetv1alpha2 "sigs.k8s.io/jobset/api/jobset/v1alpha2"
)

// FailurePolicyRuleApplyConfiguration represents a declarative configuration of the FailurePolicyRule type for use
// with apply.
type FailurePolicyRuleApplyConfiguration struct {
	Name                 *string                             `json:"name,omitempty"`
	Action               *jobsetv1alpha2.FailurePolicyAction `json:"action,omitempty"`
	OnJobFailureReasons  []string                            `json:"onJobFailureReasons,omitempty"`
	TargetReplicatedJobs []string                            `json:"targetReplicatedJobs,omitempty"`
}

// FailurePolicyRuleApplyConfiguration constructs a declarative configuration of the FailurePolicyRule type for use with
// apply.
func FailurePolicyRule() *FailurePolicyRuleApplyConfiguration {
	return &FailurePolicyRuleApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *FailurePolicyRuleApplyConfiguration) WithName(value string) *FailurePolicyRuleApplyConfiguration {
	b.Name = &value
	return b
}

// WithAction sets the Action field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Action field is set to the value of the last call.
func (b *FailurePolicyRuleApplyConfiguration) WithAction(value jobsetv1alpha2.FailurePolicyAction) *FailurePolicyRuleApplyConfiguration {
	b.Action = &value
	return b
}

// WithOnJobFailureReasons adds the given value to the OnJobFailureReasons field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the OnJobFailureReasons field.
func (b *FailurePolicyRuleApplyConfiguration) WithOnJobFailureReasons(values ...string) *FailurePolicyRuleApplyConfiguration {
	for i := range values {
		b.OnJobFailureReasons = append(b.OnJobFailureReasons, values[i])
	}
	return b
}

// WithTargetReplicatedJobs adds the given value to the TargetReplicatedJobs field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the TargetReplicatedJobs field.
func (b *FailurePolicyRuleApplyConfiguration) WithTargetReplicatedJobs(values ...string) *FailurePolicyRuleApplyConfiguration {
	for i := range values {
		b.TargetReplicatedJobs = append(b.TargetReplicatedJobs, values[i])
	}
	return b
}
